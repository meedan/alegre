stages:
  - build_qa
  - deploy_qa
  - build_live
  - deploy_live

build_api_qa:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build_qa
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python3 py3-pip git
    - pip install awscli==1.18.194
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -f production/Dockerfile --cache-from "$QA_ECR_API_BASE_URL:latest" -t "$QA_ECR_API_BASE_URL:$CI_COMMIT_SHA" -t "$QA_ECR_API_BASE_URL:latest" .
    - docker push "$QA_ECR_API_BASE_URL:$CI_COMMIT_SHA"
    - docker push "$QA_ECR_API_BASE_URL:latest"
  only:
    - develop
    - ssm-configuration

deploy_qa:
  image: python:3-alpine
  stage: deploy_qa
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl python3 py3-pip git
    - pip install awscli==1.18.194
    - pip install botocore==1.17.47
    - pip install boto3==1.14.47
    - pip install ecs-deploy==1.11.0
    - aws ssm get-parameters-by-path --region $AWS_DEFAULT_REGION --path /qa/alegre/ --recursive --with-decryption --output text --query "Parameters[].[Name]" | sed -E 's#/qa/alegre/##' > env.qa.names
    - for NAME in `cat env.qa.names`; do echo -n "-s qa-alegre-c $NAME /qa/alegre/$NAME " >> qa-alegre-c.env.args; done
    - ecs deploy ecs-qa  qa-alegre --image qa-alegre-c $QA_ECR_API_BASE_URL:$CI_COMMIT_SHA --timeout 3600 `cat qa-alegre-c.env.args`
    - echo "new Image was deployed $QA_ECR_API_BASE_URL:$CI_COMMIT_SHA"
  only:
    - develop
    - ssm-configuration

build_live:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build_live
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python3 py3-pip git
    - pip install awscli==1.18.194
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -f production/Dockerfile -t "$LIVE_ECR_API_BASE_URL:$CI_COMMIT_SHA" -t "$QA_ECR_API_BASE_URL:latest" .
    - docker push "$LIVE_ECR_API_BASE_URL:$CI_COMMIT_SHA"
  only:
    - master

deploy_live:
  image: python:3-alpine
  stage: deploy_live
  when: manual
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl jq python3 py3-pip git
    - pip install awscli==1.18.194
    - pip install botocore==1.17.47
    - pip install boto3==1.14.47
    - pip install ecs-deploy==1.11.0
    - aws ssm get-parameters-by-path --region $AWS_DEFAULT_REGION --path /live/alegre/ --recursive --with-decryption --output text --query "Parameters[].[Name]" | sed -E 's#/live/alegre/##' > env.live.names
    - for NAME in `cat env.live.names`; do echo -n "-s live-alegre-c $NAME /live/alegre/$NAME " >> live-alegre-c.env.args; done
    - ecs deploy ecs-live  live-alegre --image live-alegre-c $LIVE_ECR_API_BASE_URL:$CI_COMMIT_SHA --timeout 3600 `cat live-alegre-c.env.args`
    - echo "new Image was deployed $LIVE_ECR_API_BASE_URL:$CI_COMMIT_SHA"
  only:
    - master
